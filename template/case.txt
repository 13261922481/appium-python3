from appium import webdriver
import unittest,ddt,os,time
from untils.log import LOG
from untils.disapp import make_dis
from untils.gettestdata import huoqu_test
from funtions.regpub import RegFuntion
from untils.huoqu_xingneng import caijicpu,getnencun
from untils.recording_txt import write_recording
from config.config import TestappPackage
path=os.getcwd()
testcasedata=path+'\\data\\testcase_data.xlsx'
data_test=huoqu_test(testcasedata,index=1)
from main import l_devices
from untils.saveresult import save_result
def appium_testcase(devices):
    desired_caps = {}
    if str(devices["platformName"]).lower() == "android":
        desired_caps["unicodeKeyboard"] = "True"
        desired_caps["resetKeyboard"] = "True"
    desired_caps['udid'] = devices["udid"]
    desired_caps['deviceName'] = devices["deviceName"]
    desired_caps['platformVersion'] = devices["platformVersion"]
    desired_caps['platformName'] = devices["platformName"]
    desired_caps['appPackage'] = devices['appPackage']
    desired_caps['appActivity'] =devices['appActivity']
    desired_caps["noReset"] = "True"
    desired_caps['noSign'] = "True"
    remote = "http://127.0.0.1:" + str(devices["port"]) + "/wd/hub"
    driver = webdriver.Remote(remote, desired_caps)
    return driver
@ddt.ddt
class regtest(Parmer):
    def __init__(self,parm, methodName='runTest'):
        super(regtest, self).__init__(methodName)
        self.port=parm['port']
        print(parm)
    """这是{}测试用例"""
    def setUp(self):
        """ setup """
        self.deriver = appium_testcase(self.parm)
        LOG.info('reg测试用例开始执行')
    def tearDown(self):
        """ tearDown  """
        LOG.info('测试用例执行完毕，测试环境正在还原！')
        time.sleep(15)
        self.deriver.quit()